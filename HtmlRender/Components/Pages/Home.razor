@page "/"
@rendermode InteractiveServer

@using HtmlRender.Models
@using HtmlRender.Components


@inject ComponentRenderer cr
@inject IJSRuntime JS


<link href="bootstrap/bootstrap.min.css" rel="stylesheet" />

<PageTitle>Home</PageTitle>

<h1>Hello, world!</h1>


<h3>Employee List</h3>


<h3>Eligible for Testing</h3>

<EligibleForTestingTable EligibleForTestingList="eligibleForTesting" />


<button class="btn btn-primary p-2 m-5" @onclick="OnButtonClickAsync">Render to HTML</button>




@code {
    private List<EligibleForTesting> eligibleForTesting;

    protected override void OnInitialized()
    {
        // Fetch mock eligible for testing data
        eligibleForTesting = EligibleForTesting.GetEligibleForTestingData();
    }



    private async Task OnButtonClickAsync()
    {



        var parameters = new Dictionary<string, object>
    {
        { "EligibleForTestingList", eligibleForTesting }
    };



        string htmlString = await cr.RenderComponentToStringAsync<EligibleForTestingTable>(parameters);
        await JS.InvokeVoidAsync("openHtmlInNewTab", htmlString);
       // System.Diagnostics.Debug.WriteLine(htmlString);
    }
}

